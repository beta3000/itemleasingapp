{"version":3,"file":"step-header.component.js","sourceRoot":"","sources":["../../../../../src/platform/core/steps/step-header/step-header.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAEjD,OAAO,EAAe,aAAa,EAAqB,kBAAkB,EAAE,MAAM,4BAA4B,CAAC;AAE/G,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAC;AAE9C;IAAA;IAA+B,CAAC;IAAD,uBAAC;AAAD,CAAC,AAAhC,IAAgC;;AAEhC,8BAA8B;AAC9B,MAAM,CAAC,IAAM,sBAAsB,GAAG,kBAAkB,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC;AAQ1F,IAAa,qBAAqB;IAAS,yCAAsB;IANjE;QAAA,qEAuCC;QApBC;;;;WAIG;QACa,WAAK,GAAc,SAAS,CAAC,IAAI,CAAC;;IAepD,CAAC;IAbC;;OAEG;IACH,0CAAU,GAAV;QACE,MAAM,CAAC,IAAI,CAAC,KAAK,KAAK,SAAS,CAAC,QAAQ,CAAC;IAC3C,CAAC;IAED;;OAEG;IACH,0CAAU,GAAV;QACE,MAAM,CAAC,IAAI,CAAC,KAAK,KAAK,SAAS,CAAC,QAAQ,CAAC;IAC3C,CAAC;IACH,4BAAC;AAAD,CAAC,AAjCD,CAA2C,sBAAsB,GAiChE;AA5BkB;IAAhB,KAAK,CAAC,QAAQ,CAAC;;qDAAgB;AAMf;IAAhB,KAAK,CAAC,QAAQ,CAAC;;qDAAiB;AAOjB;IAAf,KAAK,CAAC,OAAO,CAAC;;oDAAmC;AAlBvC,qBAAqB;IANjC,SAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,MAAM,EAAE,CAAC,UAAU,EAAE,eAAe,CAAC;QACrC,SAAS,EAAE,CAAC,8BAA8B,CAAE;QAC5C,WAAW,EAAE,8BAA8B;KAC5C,CAAC;GACW,qBAAqB,CAiCjC;SAjCY,qBAAqB","sourcesContent":["import { Component, Input } from '@angular/core';\n\nimport { ICanDisable, mixinDisabled, ICanDisableRipple, mixinDisableRipple } from '../../common/common.module';\n\nimport { StepState } from '../step.component';\n\nexport class TdStepHeaderBase {}\n\n/* tslint:disable-next-line */\nexport const _TdStepHeaderMixinBase = mixinDisableRipple(mixinDisabled(TdStepHeaderBase));\n\n@Component({\n  selector: 'td-step-header',\n  inputs: ['disabled', 'disableRipple'],\n  styleUrls: ['./step-header.component.scss' ],\n  templateUrl: './step-header.component.html',\n})\nexport class TdStepHeaderComponent extends _TdStepHeaderMixinBase implements ICanDisable, ICanDisableRipple {\n\n  /**\n   * Number assigned to [TdStepHeaderComponent].\n   */\n  @Input('number') number: number;\n\n  /**\n   * active?: boolean\n   * Sets for active/inactive states on header.\n   */\n  @Input('active') active: boolean;\n\n  /**\n   * state?: StepState or ['none' | 'required' | 'complete']\n   * Sets styles for state of header.\n   * Defaults to [StepState.None | 'none'].\n   */\n  @Input('state') state: StepState = StepState.None;\n\n  /**\n   * Returns 'true' if [state] equals to [StepState.Complete | 'complete'], else 'false'.\n   */\n  isComplete(): boolean {\n    return this.state === StepState.Complete;\n  }\n\n  /**\n   * Returns 'true' if [state] equals to [StepState.Required | 'required'], else 'false'.\n   */\n  isRequired(): boolean {\n    return this.state === StepState.Required;\n  }\n}\n"]}